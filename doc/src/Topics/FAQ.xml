<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Kal" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">FAQ</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">FAQ</text></para>
    </header>
    <para styleclass="Heading1"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">BrightstarDB is different and we believe the best way to store and organize data; from the phone to the enterprise. This section answers some common questions about BrightstarDB.</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Why BrightstarDB?</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">There are lots of things that influenced us. The mismatch between object models and relational technology. The lack of good tools for developers to work with semantic web data. The existing code-first approaches seemed clunky. A lack of light weight dedicated .NET NoSQL databases. A lack of any native .NET NoSQL RDF data stores. The market acceptance that SQL Server isn&apos;t the best solution for all data driven applications. A desire to build an awesome developer experience and that also reduced the cost of data ownership and data usage to end customers. </text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">What data gets stored?</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">BrightstarDB at its heart is a triple store. A triple, unsurprisingly, consists of three parts. The subject, predicate and object. An example follows:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;</text><link displaytype="text" defaultstyle="true" type="weblink" href="&lt;%LINK_CAPTION%&gt;" target="_blank" styleclass="Code Example" translate="true">http://example.org/products/brightstar</link><text styleclass="Code Example" translate="true">&gt; &lt;</text><link displaytype="text" defaultstyle="true" type="weblink" href="&lt;%LINK_CAPTION%&gt;" target="_blank" styleclass="Code Example" translate="true">http://example.org/vocab/name</link><text styleclass="Code Example" translate="true">&gt; &quot;BrightstarDB&quot;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This simple structure allows the construction of all other kinds of data structures. It is the data structure that powers the semantic web. No matter which BrightstarDB client API is being used these are the basic units of data that are stored. To read more about triples and RDF this Primer is highly recommended. [[todo]]</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">What gets indexed?</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Practically everything that is stored. BrightstarDB maintains optimized indexes to quickly retrieve associated resources. This means that it is ideally suited to persisting the data of object models and executing queries with large numbers of joins.</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">How does it get stored?</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">BrightstarDB is a WORM store, or Write Once Read Many store. Now, this doesn&apos;t mean that data cannot be updated just that on the disk no data EVER gets overwritten. Instead changed data is written to the end of the file.</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Is there a database schema?</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">How is data backed up?</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Is it robust?</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Is there a query language?</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">What makes it different for developers?</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">What makes it different for customers?</text></para>
  </body>
</topic>
