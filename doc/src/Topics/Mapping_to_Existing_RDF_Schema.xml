<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Kal" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Mapping to Existing RDF Data</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Mapping to Existing RDF Data</text></para>
    </header>
    <para styleclass="Notes"><text styleclass="Notes" translate="true">The source code for this example can be found in [INSTALLDIR]\Samples\EntityFramework\EntityFrameworkSamples.sln</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">One of the things that makes BrightstarDB unique is the ability to map multiple object models onto the same data and to map an object model onto existing RDF data. An example of this could be when some contact data in RDF foaf form is imported into BrightstarDB and an application wants to make use of that data. Using the BrightstarDB annotations it is possible to map object classes and properties to existing types and property types.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1"><text styleclass="Normal" translate="true">The following FOAF RDF triples are added to the data store. </text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;http://www.brightstardb.com/people/david&gt; &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://xmlns.com/foaf/0.1/Person&gt; .</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;http://www.brightstardb.com/people/david&gt; &lt;http://xmlns.com/foaf/0.1/nick&gt; &quot;&quot;David&quot;&quot; .</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;http://www.brightstardb.com/people/david&gt; &lt;http://xmlns.com/foaf/0.1/name&gt; &quot;&quot;David Summers&quot;&quot; .</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;http://www.brightstardb.com/people/david&gt; &lt;http://xmlns.com/foaf/0.1/Organization&gt; &quot;&quot;Microsoft&quot;&quot; .</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://xmlns.com/foaf/0.1/Person&gt; .</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://xmlns.com/foaf/0.1/nick&gt; &quot;&quot;Simon&quot;&quot; .</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://xmlns.com/foaf/0.1/name&gt; &quot;&quot;Simon Williamson&quot;&quot; .</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://xmlns.com/foaf/0.1/Organization&gt; &quot;&quot;Microsoft&quot;&quot; .</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://xmlns.com/foaf/0.1/knows&gt; &lt;http://www.brightstardb.com/people/david&gt; .</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Triples can be loaded into the BrightStarDB using the following code:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">var triples = new StringBuilder();</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">triples.AppendLine(@&quot;&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://xmlns.com/foaf/0.1/Person&gt; .&quot;);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">triples.AppendLine(@&quot;&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://xmlns.com/foaf/0.1/nick&gt; &quot;&quot;Simon&quot;&quot; .&quot;);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">triples.AppendLine(@&quot;&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://xmlns.com/foaf/0.1/name&gt; &quot;&quot;Simon Williamson&quot;&quot; .&quot;);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">triples.AppendLine(@&quot;&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://xmlns.com/foaf/0.1/Organization&gt; &quot;&quot;Microsoft&quot;&quot; .&quot;);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">triples.AppendLine(@&quot;&lt;http://www.brightstardb.com/people/simon&gt; &lt;http://xmlns.com/foaf/0.1/knows&gt; &lt;http://www.brightstardb.com/people/david&gt; .&quot;);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">client.ExecuteTransaction(storeName, null, triples.ToString());</text></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Defining Mappings</text></para>
    <para styleclass="Heading1"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">To access this data from the Entity Framework, we need to define the mappings between the RDF predictates and the properties on an object that represents an entity in the store.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The properties are marked up with the PropertyType attribute of the RDF predicate. If the property &quot;Name&quot; should match the predicate &quot;</text><link displaytype="text" defaultstyle="true" type="weblink" href="&lt;%LINK_CAPTION%&gt;" target="_blank" styleclass="Normal" translate="true">http://xmlns.com/foaf/0.1/name&quot;</link><text styleclass="Normal" translate="true">, we add the attribute </text><text styleclass="Code Example" translate="true">[PropertyType(&quot;</text><link displaytype="text" defaultstyle="true" type="weblink" href="&lt;%LINK_CAPTION%&gt;" target="_blank" styleclass="Code Example" translate="true">http://xmlns.com/foaf/0.1/name</link><text styleclass="Code Example" translate="true">&quot;)].</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">We can add a Namespace Declaration to the project&apos;s AssemblyInfo.cs file to shorted the URIs used in the attributes, in the format:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">[assembly: NamespaceDeclaration(&quot;foaf&quot;, &quot;</text><link displaytype="text" defaultstyle="true" type="weblink" href="&lt;%LINK_CAPTION%&gt;" target="_blank" styleclass="Code Example" translate="true">http://xmlns.com/foaf/0.1/&quot;)</link><text styleclass="Code Example" translate="true">]</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This means the PropertyType attributes can be shortened to </text><text styleclass="Code Example" translate="true">[PropertyType(&quot;foaf:name&quot;)]</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The RDF example given above would be mapped to an entity as given below:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">[Entity(&quot;http://xmlns.com/foaf/0.1/Person&quot;)]</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">public interface IPerson</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">{</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;[Identifier(&quot;http://www.brightstardb.com/people/&quot;)]</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;string Id { get; }</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;[PropertyType(&quot;foaf:nick&quot;)]</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;string Nickname { get; set; }</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;[PropertyType(&quot;foaf:name&quot;)]</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;string Name { get; set; }</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;[PropertyType(&quot;foaf:Organization&quot;)]</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;string Organisation { get; set; }</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;[PropertyType(&quot;foaf:knows&quot;)]</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;ICollection&lt;IPerson&gt; Knows { get; set; }</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;[InversePropertyType(&quot;foaf:knows&quot;)]</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;ICollection&lt;IPerson&gt; KnownBy { get; set; }</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">}</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Adding the [Identifier(&quot;http://www.</text><text styleclass="Code Example" translate="true">brightstardb</text><text styleclass="Normal" translate="true">.com/people/&quot;)] to the ID of the interface, means that when we can query and retrieve the Id without the entire prefix</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Example</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Once there is RDF data in the store, and an interface that maps an entity to the RDF data, the data can then be accessed easy using the Entity Framework by using the correct connection string to directly access the store.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">var connectionString = &quot;Type=http;endpoint=http://localhost:8090/brightstar;StoreName=Foaf&quot;;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">var context = new FoafContext(connectionString);</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">If you have added the connection string into the Config file:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="XML HTML Example"><text styleclass="XML HTML Example" translate="true">&lt;add key=&quot;BrightstarDB.ConnectionString&quot; value=&quot;Type=http;endpoint=http://localhost:8090/brightstar;StoreName=Foaf&quot; /&gt;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">then you can initialise the content with a simple:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">var context = new FoafContext();</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">For more information about connection strings, please read the </text><link displaytype="text" defaultstyle="true" type="topiclink" href="Connection_Strings" anchor="connectionstrings" styleclass="Normal" translate="true">&quot;Connection Strings&quot; topic</link></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The code below connects to the store to access all the people in the RDF data, it then writes their name and place of employment, along with all the people they know or are known by.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">var context = new FoafContext(connectionString);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">var people = context.Persons.ToList();</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">var count = people.Count;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">Console.WriteLine(@&quot;{0} people found in raw RDF data&quot;, count);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">Console.WriteLine();</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">foreach(var person in people)</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">{</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;var knows = new List&lt;IPerson&gt;();</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;knows.AddRange(person.Knows);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;knows.AddRange(person.KnownBy);</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;Console.WriteLine(@&quot;{0} ({1}), works at {2}&quot;, person.Name, person.Nickname, person.Organisation);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;Console.WriteLine(knows.Count == 1 ? string.Format(@&quot;{0} knows 1 other person&quot;, person.Nickname)</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; : string.Format(@&quot;{0} knows {1} other people&quot;, person.Nickname, knows.Count));</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;foreach(var other in knows)</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;{</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;Console.WriteLine(@&quot; &#160; &#160;{0} at {1}&quot;, other.Name, other.Organisation);</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;}</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;Console.WriteLine();</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">}</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
