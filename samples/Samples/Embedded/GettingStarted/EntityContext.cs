// -----------------------------------------------------------------------
// <autogenerated>
//    This code was generated from a template.
// 
//    Changes to this file may cause incorrect behaviour and will be lost
//    if the code is regenerated.
// </autogenerated>
// ------------------------------------------------------------------------
namespace BrightstarDB.Samples.EntityFramework.GettingStartedCore
{
    [System.CodeDom.Compiler.GeneratedCode("BrightstarDB.CodeGeneration", "0.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class EntityContext : global::BrightstarDB.EntityFramework.BrightstarEntityContext
    {
        static EntityContext()
        {
            var provider = new global::BrightstarDB.EntityFramework.ReflectionMappingProvider();
            provider.AddMappingsForType(global::BrightstarDB.EntityFramework.EntityMappingStore.Instance, typeof(global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor));
            global::BrightstarDB.EntityFramework.EntityMappingStore.Instance.SetImplMapping<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor, BrightstarDB.Samples.EntityFramework.GettingStartedCore.Actor>();
            provider.AddMappingsForType(global::BrightstarDB.EntityFramework.EntityMappingStore.Instance, typeof(global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm));
            global::BrightstarDB.EntityFramework.EntityMappingStore.Instance.SetImplMapping<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm, BrightstarDB.Samples.EntityFramework.GettingStartedCore.Film>();
        }

        public EntityContext()
        {
            this.InitializeContext();
        }

        public EntityContext(global::BrightstarDB.Client.IDataObjectStore dataObjectStore) : base(dataObjectStore)
        {
            this.InitializeContext();
        }

        public EntityContext(string updateGraphUri, global::System.Collections.Generic.IEnumerable<global::System.String> datasetGraphUris, string versionGraphUri) : base(updateGraphUri, datasetGraphUris, versionGraphUri)
        {
            this.InitializeContext();
        }

        public EntityContext(string connectionString, global::System.Boolean? enableOptimisticLocking = null, string updateGraphUri = null, global::System.Collections.Generic.IEnumerable<global::System.String> datasetGraphUris = null, string versionGraphUri = null) : base(connectionString, enableOptimisticLocking, updateGraphUri, datasetGraphUris, versionGraphUri)
        {
            this.InitializeContext();
        }

        private void InitializeContext()
        {
            this._Actors = (new global::BrightstarDB.EntityFramework.BrightstarEntitySet<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor>(this));
            this._Films = (new global::BrightstarDB.EntityFramework.BrightstarEntitySet<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm>(this));
        }

        public global::BrightstarDB.EntityFramework.IEntitySet<T> EntitySet<T>()
            where T : class
        {
            global::System.Type type = typeof(T);
            if (type.Equals(typeof(global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor)))
            {
                return (global::BrightstarDB.EntityFramework.IEntitySet<T>)(this.Actors);
            }

            if (type.Equals(typeof(global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm)))
            {
                return (global::BrightstarDB.EntityFramework.IEntitySet<T>)(this.Films);
            }

            throw new global::System.InvalidOperationException(((typeof(T)).FullName) + (" is not a recognized entity interface type."));
        }

        private global::BrightstarDB.EntityFramework.IEntitySet<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor> _Actors;
        public global::BrightstarDB.EntityFramework.IEntitySet<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor> Actors
        {
            get
            {
                return this._Actors;
            }
        }

        private global::BrightstarDB.EntityFramework.IEntitySet<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm> _Films;
        public global::BrightstarDB.EntityFramework.IEntitySet<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm> Films
        {
            get
            {
                return this._Films;
            }
        }
    }
}
namespace BrightstarDB.Samples.EntityFramework.GettingStartedCore
{
    [System.CodeDom.Compiler.GeneratedCode("BrightstarDB.CodeGeneration", "0.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class Actor : global::BrightstarDB.EntityFramework.BrightstarEntityObject, global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor
    {
        public Actor()
        {
        }

        public Actor(global::BrightstarDB.EntityFramework.BrightstarEntityContext context) : base(context, typeof(Actor))
        {
        }

        public Actor(global::BrightstarDB.EntityFramework.BrightstarEntityContext context, global::BrightstarDB.Client.IDataObject dataObject) : base(context, dataObject)
        {
        }

        public global::System.String Id
        {
            get
            {
                return base.GetKey();
            }

            set
            {
                base.SetKey(value);
            }
        }

        public global::System.String Name
        {
            get
            {
                return base.GetRelatedProperty<global::System.String>("Name");
            }

            set
            {
                base.SetRelatedProperty("Name", value);
            }
        }

        public global::System.DateTime DateOfBirth
        {
            get
            {
                return base.GetRelatedProperty<global::System.DateTime>("DateOfBirth");
            }

            set
            {
                base.SetRelatedProperty("DateOfBirth", value);
            }
        }

        public global::System.Collections.Generic.ICollection<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm> Films
        {
            get
            {
                return base.GetRelatedObjects<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm>("Films");
            }

            set
            {
                if ((value) == (null))
                {
                    throw new global::System.ArgumentNullException("value");
                }

                base.SetRelatedObjects<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm>("Films", value);
            }
        }
    }
}
namespace BrightstarDB.Samples.EntityFramework.GettingStartedCore
{
    [System.CodeDom.Compiler.GeneratedCode("BrightstarDB.CodeGeneration", "0.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class Film : global::BrightstarDB.EntityFramework.BrightstarEntityObject, global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IFilm
    {
        public Film()
        {
        }

        public Film(global::BrightstarDB.EntityFramework.BrightstarEntityContext context) : base(context, typeof(Film))
        {
        }

        public Film(global::BrightstarDB.EntityFramework.BrightstarEntityContext context, global::BrightstarDB.Client.IDataObject dataObject) : base(context, dataObject)
        {
        }

        public global::System.String Id
        {
            get
            {
                return base.GetKey();
            }

            set
            {
                base.SetKey(value);
            }
        }

        public global::System.String Name
        {
            get
            {
                return base.GetRelatedProperty<global::System.String>("Name");
            }

            set
            {
                base.SetRelatedProperty("Name", value);
            }
        }

        public global::System.Collections.Generic.ICollection<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor> Actors
        {
            get
            {
                return base.GetRelatedObjects<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor>("Actors");
            }

            set
            {
                if ((value) == (null))
                {
                    throw new global::System.ArgumentNullException("value");
                }

                base.SetRelatedObjects<global::BrightstarDB.Samples.EntityFramework.GettingStartedCore.IActor>("Actors", value);
            }
        }
    }
}
