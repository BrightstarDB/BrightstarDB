Namespace BrightstarDB.CodeGeneration.Tests

    <System.CodeDom.Compiler.GeneratedCode("BrightstarDB", "$VERSION$")>
    <System.Runtime.CompilerServices.CompilerGenerated>
    Public Partial Class EntityContext
        Inherits Global.BrightstarDB.EntityFramework.BrightstarEntityContext

        Shared Sub New()
            Dim provider = New Global.BrightstarDB.EntityFramework.ReflectionMappingProvider()
            provider.AddMappingsForType(Global.BrightstarDB.EntityFramework.EntityMappingStore.Instance, GetType(Global.BrightstarDB.CodeGeneration.Tests.IMyEmptyEntity))
            Global.BrightstarDB.EntityFramework.EntityMappingStore.Instance.SetImplMapping(Of Global.BrightstarDB.CodeGeneration.Tests.IMyEmptyEntity, BrightstarDB.CodeGeneration.Tests.MyEmptyEntity)()
        End Sub

        Public Sub New()
            Me.InitializeContext()
        End Sub

        Public Sub New(dataObjectStore As Global.BrightstarDB.Client.IDataObjectStore)
            MyBase.New(dataObjectStore)
            Me.InitializeContext()
        End Sub

        Public Sub New(updateGraphUri As String, datasetGraphUris As Global.System.Collections.Generic.IEnumerable(Of System.String), versionGraphUri As String)
            MyBase.New(updateGraphUri, datasetGraphUris, versionGraphUri)
            Me.InitializeContext()
        End Sub

        Public Sub New(connectionString As String, Optional enableOptimisticLocking As System.Boolean? = Nothing, Optional updateGraphUri As String = Nothing, Optional datasetGraphUris As Global.System.Collections.Generic.IEnumerable(Of System.String) = Nothing, Optional versionGraphUri As String = Nothing)
            MyBase.New(connectionString, enableOptimisticLocking, updateGraphUri, datasetGraphUris, versionGraphUri)
            Me.InitializeContext()
        End Sub

        Private Sub InitializeContext()
            Me._MyEmptyEntities = New Global.BrightstarDB.EntityFramework.BrightstarEntitySet(Of Global.BrightstarDB.CodeGeneration.Tests.IMyEmptyEntity)(Me)
        End Sub

        Public Function EntitySet(Of T As Class)() As Global.BrightstarDB.EntityFramework.IEntitySet(Of T)
            Dim type As Global.System.Type = GetType(T)
            If type.Equals(GetType(Global.BrightstarDB.CodeGeneration.Tests.IMyEmptyEntity)) Then
                Return DirectCast(Me.MyEmptyEntities, Global.BrightstarDB.EntityFramework.IEntitySet(Of T))
            End If

            Throw New Global.System.InvalidOperationException(((GetType(T)).FullName) + (" is not a recognized entity interface type."))
        End Function

        Private _MyEmptyEntities As Global.BrightstarDB.EntityFramework.IEntitySet(Of Global.BrightstarDB.CodeGeneration.Tests.IMyEmptyEntity)

        Public ReadOnly Property MyEmptyEntities As Global.BrightstarDB.EntityFramework.IEntitySet(Of Global.BrightstarDB.CodeGeneration.Tests.IMyEmptyEntity)
            Get
                Return Me._MyEmptyEntities
            End Get
        End Property
    End Class
End Namespace
Namespace BrightstarDB.CodeGeneration.Tests

    <System.CodeDom.Compiler.GeneratedCode("BrightstarDB", "$VERSION$")>
    <System.Runtime.CompilerServices.CompilerGenerated>
    Public Partial Class MyEmptyEntity
        Inherits Global.BrightstarDB.EntityFramework.BrightstarEntityObject
        Implements Global.BrightstarDB.CodeGeneration.Tests.IMyEmptyEntity

        Public Sub New()
        End Sub

        Public Sub New(context As Global.BrightstarDB.EntityFramework.BrightstarEntityContext)
            MyBase.New(context, GetType(MyEmptyEntity))
        End Sub

        Public Sub New(context As Global.BrightstarDB.EntityFramework.BrightstarEntityContext, dataObject As Global.BrightstarDB.Client.IDataObject)
            MyBase.New(context, dataObject)
        End Sub
    End Class
End Namespace
