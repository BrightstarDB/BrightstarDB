Patch log file

Add new logs to the end of this file and try to keep it in the correct order
Put as much detail as you can in the Reason and Work Done fields to make it easier to see if patches need re-applying
when we update dotNetRdf. There should be enough information to make it possible to easily manually re-apply changes
(this may be necessary if the source changes so much that an automated patch is not possible).


Obsolete Patches
----------------

Don't try to apply these patches:

2369_20120813_libraries_core_query_SparqlOperator.cs.patch
Patched by: Kal
OBSOLETE : Updated by Rob in SVN
Reason: Windows Phone libraries do not provide Enum.GetValues(Type) so an alternative way of iterating the values of SparqlOperatorType enum is required
Work done: Added a static array of SparqlOperatorType enum values and conditionally compiled code for WindowsPhone that iterates that array rather than trying to call Enum.GetValues

Patch: 2029_20120125_libraries_core_query_expressions_functions.patch
Status: OBSOLETE (now fixed in dotNetRdf trunk)
Patched by: Kal
Reason: Fix compilation errors in the WindowsPhone7 build of dotNetRdf
Work done: 
  Fixed a number of places where the reference to the System.HashLib.Crypto was incorrect (it was referencing just System.HashLib)
  Fixed naming issues in MD5HashFunction class in the VDS.RDF.Query.Expressions.Functions.Leviathan.Hash namespace
  NOTE: These were all compile-time errors causing the build to fail so they should be easy to spot if they are still in any future upgrade.

Patch: 2029_20120125_libraries_core.windowsphone_compatability_HashSet.cs.patch
Patched by: Kal
Status: OBSOLETE (now fixed in dotNetRdf trunk)
Reason: Added implementation of the GetEnumerator() methods that is required by the SPARQL query processor. 
Work done: Implementation just returns an enumertor over the keys from MyDict.

Patch: 2156_20120322_libraries_core.patch
Patched by: Kal
Status: OBSOLETE (made obsolete by changes to dotNetRDF core APIs)
Reason: Adds the GenericUpdateProcessor and IGenericIOManager classes into the windows phone build of dotNetRdf.
Work done: Removed the #if !NO_STORE conditional compilation, and added a conditionally compiled section to ProcessLoadCommand to load the graph (as the mobile build does not support synchronous graph import)

Patch: 2029_20120125_libraries_core_query_SPARQLExpressionParser.cs.patch
Patched by: Kal
Status: OBSOLETE (made obsolete by changes to dotNetRDF internals)
Reason: Fix for BUGZID 5123 - TestLinqContainsLong(). The XML Schema long datatype was not being recognized as a valid integer value.
Work done: Changed test for integer value to check for XmlSpecsHelper.XmlSchemaDataTypeInteger OR XmlSpecsHelper.XmlSchemaDataTypeLong, rather than just XmlSpecsHelper.XmlSchemaDataTypeInteger

Patch: 2156_20120320_libraries_core_query_algebra_Set.cs.patch
Patched by: Kal with input from Gra
Status: OBSOLETE (Rob has moved JoinedSet into the EXPERIMENTAL build, so its not any longer an issue unless it gets resurrected)
Reason: Rob's caching code for the JoinedSet implementation could not handle a second insert of the same key/value pair. The patch checks inserts and will only throw an error if an attempt is made to overwrite an exising cached value with a different value.
Work done: Added a _cache.TryGetValue() before doing _cache.Add()

Patch: 2181_20120516_libraries_core_core.patch
Patched by: Kal
Status: OBSOLETE (made obsolete by changes to dotNetRDF core APIs)
Reason: Modifies the MimeTypesHelper.GetRdfParser() methods to take a TokenQueueMode parameter that allows the default queuing mode of the returned parser to be set.
Work done: Added GetRdfParser(TokenQueueMode) to MimeTypeDefinition.cs, added a tokenQueueMode parameter to GetParser(IEnumerable<string>) and GetParser(string) in MIMETypesHelper.

2369_20120813_libraries_core.silverlight_compatibility_SilverlightCompatability.cs.patch
Patched by: Kal
Status: OBSOLETE (now merged into dotNetRDF)
Reason: Adds FindIndex<T>(Predicate<T>) method to the List<T> class as an extension method (this method is present in .NET 4.0 but not in the Silverlight libraries)

2371_20120912_libraries_core_query_algebra_LazyBgp.cs.patch
Patched by: Gra
Status: OBSOLETE (now merged into dotNetRDF)
Reason: Fixes processing of queries with a LIMIT that is greater than the total number of rows in the results set.
